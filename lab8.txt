//Program 8:- Develop a menu driven program to animate a flag using Bezier Curve algorithm

#include <stdio.h>
#include <GL/glut.h>
#include<math.h>

GLfloat ya=50;
int yflag=1;

GLfloat xa=10;
int xflag=1;

int process=0;

void animate()
{
    if(process==1)
    {


        if(ya>-50 && yflag==1)
            ya=ya-0.02;

        if(ya<=-50 && yflag==1)
            yflag=0;

        if(ya<50&&yflag==0)
            ya+=0.2;

        if(ya>=50&&yflag==0)
            yflag=1;

        if(ya>-10 && xflag==1)
           xa=xa-0.02;

        if(xa<=-10 && xflag==1)
            xflag=0;

        if(xa<10&&xflag==0)
            xa+=0.2;

        if(xa>=10&&xflag==0)
            xflag=1;
}


    glutPostRedisplay();
}


void display()
{


    GLfloat x[4],y1[4],y2[4],y3[4];
    GLdouble xt[200],y1t[200],y2t[200],t,y3t[200];
    int i;
    glClear(GL_COLOR_BUFFER_BIT);

    x[0]=100;
    x[1]=200;
    x[2]=200;
    x[3]=300-xa;

    y1[0]=450;
    y1[1]=450+ya;
    y1[2]=450-ya;
    y1[3]=450;

    y2[0]=400;
    y2[1]=400+ya;
    y2[2]=400-ya;
    y2[3]=400;

    y3[0]=350;
    y3[1]=350+ya;
    y3[2]=350-ya;
    y3[3]=350;

    for(i=0,t=0;t<=1;t+=0.01,i++)
    {

        xt[i]=pow(1-t,3)*x[0] +3*t*pow(1-t,2)*x[1]+3*pow(t,2)*(1-t)*x[2]+pow(t,3)*x[3];
        y1t[i]=pow(1-t,3)*y1[0] +3*t*pow(1-t,2)*y1[1]+3*pow(t,2)*(1-t)*y1[2]+pow(t,3)*y1[3];
        y2t[i]=pow(1-t,3)*y2[0] +3*t*pow(1-t,2)*y2[1]+3*pow(t,2)*(1-t)*y2[2]+pow(t,3)*y2[3];
        y3t[i]=pow(1-t,3)*y3[0] +3*t*pow(1-t,2)*y3[1]+3*pow(t,2)*(1-t)*y3[2]+pow(t,3)*y3[3];

    }

glPointSize(3.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_QUAD_STRIP);
    for(i=0;i<200;i++)
    {
      glVertex2d(xt[i],y1t[i]);
      glVertex2d(xt[i],y2t[i]);
    }
glEnd();

glColor3f(1.0,1.0,0.0);
glBegin(GL_QUAD_STRIP);
    for(i=0;i<200;i++)
    {
      glVertex2d(xt[i],y2t[i]);
      glVertex2d(xt[i],y3t[i]);
    }
glEnd();

glColor3f(1.0,1.0,1.0);
glRecti(90,451,100,50);


glFlush();
}

void myinit()
{

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    gluOrtho2D(0,500,0,500);
    glMatrixMode(GL_PROJECTION);
}

void menu(int key)
{
    if(key==1)
    {
        process=1;
    }
    else if(key==2)
    {
        process=0;
    }
    else if(key==3)
        exit(0);
}

int main(int argc, char** argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
glutInitWindowSize(500,500);
glutInitWindowPosition(0,0);
glutCreateWindow("FLAG");
glutDisplayFunc(display);
myinit();
glutIdleFunc(animate);
glutCreateMenu(menu);
glutAddMenuEntry("animate",1);
glutAddMenuEntry("stop",2);
glutAddMenuEntry("Quit",3);
glutAttachMenu(GLUT_RIGHT_BUTTON);
glutMainLoop();
}



